const puppeteer = require("puppeteer-core");
const fs = require("fs");
const path = require("path");
const axios = require("axios");
const FormData = require("form-data");

// === CONFIG ===
const VIDEO_URL = "https://vm.tiktok.com/ZMSwR9pnE/";
const CHROMIUM_PATH = "/usr/bin/chromium";
const SCREENSHOT_FILE = "video_thumb.png";
const PCLOUD_AUTH = "0Ig470ZsOdg7Z0sX5QYSOs2SnylhpDGsAt5kWoYzX"; // Your pCloud token

// === 1. Take Screenshot ===
async function takeScreenshot() {
  const browser = await puppeteer.launch({
    executablePath: CHROMIUM_PATH,
    headless: true,
    args: ["--no-sandbox", "--disable-setuid-sandbox"]
  });

  const page = await browser.newPage();
  await page.goto(VIDEO_URL, { waitUntil: "networkidle2", timeout: 0 });

  const video = await page.$("video");
  if (!video) {
    console.log("‚ùå No <video> found.");
    await browser.close();
    return false;
  }

  await video.evaluate((v) => v.play());
  await new Promise(resolve => setTimeout(resolve, 2000)); // wait for 2s

  const clip = await video.boundingBox();
  if (!clip) {
    console.log("‚ùå Couldn't detect video bounds.");
    await browser.close();
    return false;
  }

  await video.screenshot({ path: SCREENSHOT_FILE, clip });
  console.log("‚úÖ Screenshot saved:", SCREENSHOT_FILE);
  await browser.close();
  return true;
}

// === 2. Upload to pCloud Using Auth Token ===
async function uploadToPCloud(authToken, filePath) {
  const fileStream = fs.createReadStream(filePath);
  const form = new FormData();
  form.append("filename", path.basename(filePath));
  form.append("file", fileStream);

  const res = await axios.post(
    `https://api.pcloud.com/uploadfile?auth=${authToken}&folderid=0`,
    form,
    { headers: form.getHeaders() }
  );

  if (res.data.result !== 0) {
    throw new Error("‚ùå Upload failed: " + res.data.error);
  }

  console.log("üì§ Uploaded to pCloud:", res.data.metadata[0].name);
}

// === Main ===
(async () => {
  try {
    const ok = await takeScreenshot();
    if (!ok) return;

    await uploadToPCloud(PCLOUD_AUTH, SCREENSHOT_FILE);
  } catch (err) {
    console.error("‚ùå Error:", err.message);
  }
})();
