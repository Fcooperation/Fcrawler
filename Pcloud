// Requires: puppeteer-core, axios, fs, path, form-data
const puppeteer = require('puppeteer-core');
const fs = require('fs');
const path = require('path');
const axios = require('axios');
const FormData = require('form-data');

// --- CONFIG SECTION ---
const VIDEO_URL = 'https://vm.tiktok.com/ZMSwR9pnE/';
const P_CLOUD_AUTH = 'your_auth_token_here'; // Paste your token here securely
const SCREENSHOT_PATH = 'video_thumbnail.png';

// --- Function to launch Chromium and screenshot video only ---
async function captureVideoOnlyScreenshot(url) {
  const browser = await puppeteer.launch({
    executablePath: '/usr/bin/chromium', // Adjust if using Chromium on Termux
    headless: true,
    args: ['--no-sandbox', '--disable-setuid-sandbox']
  });
  const page = await browser.newPage();
  await page.goto(url, { waitUntil: 'networkidle2', timeout: 0 });

  // Detect if video is inside iframe
  const iframes = await page.frames();
  const videoFrame = iframes.find(f => f.url().includes('tiktok') && f !== page.mainFrame());
  const frameToUse = videoFrame || page.mainFrame();

  // Try to find video
  const videoHandle = await frameToUse.$('video');
  if (!videoHandle) {
    console.log("❌ No video element found.");
    await browser.close();
    return false;
  }

  const boundingBox = await videoHandle.boundingBox();
  await videoHandle.screenshot({
    path: SCREENSHOT_PATH,
    clip: boundingBox
  });

  await browser.close();
  console.log("✅ Video screenshot saved:", SCREENSHOT_PATH);
  return true;
}

// --- Upload screenshot and link to pCloud ---
async function uploadToPcloud(authToken, filePath, videoLink) {
  const fileStream = fs.createReadStream(filePath);
  const form = new FormData();
  form.append('filename', path.basename(filePath));
  form.append('file', fileStream);
  form.append('auth', authToken);
  form.append('folderid', 0); // root folder

  const response = await axios.post('https://api.pcloud.com/uploadfile', form, {
    headers: form.getHeaders(),
    maxContentLength: Infinity,
    maxBodyLength: Infinity
  });

  if (response.data && response.data.result === 0) {
    const uploaded = response.data.metadata[0];
    console.log("✅ Uploaded to pCloud:", uploaded.name);
    console.log("🔗 Video Link:", videoLink);
    console.log("🔗 Thumbnail:", `https://filedn.pcloud.com/api/file/${uploaded.fileid}`);
  } else {
    console.log("❌ Failed to upload to pCloud", response.data);
  }
}

// --- Run everything ---
(async () => {
  const success = await captureVideoOnlyScreenshot(VIDEO_URL);
  if (success) {
    await uploadToPcloud(P_CLOUD_AUTH, SCREENSHOT_PATH, VIDEO_URL);
  }
})();
